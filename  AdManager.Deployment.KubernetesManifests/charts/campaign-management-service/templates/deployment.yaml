apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "campaign-management-service.fullname" . }}
  labels:
    {{- include "campaign-management-service.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "campaign-management-service.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        {{- include "campaign-management-service.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
        {{- if .Values.featureToggles.enableIstioIntegration }}
        sidecar.istio.io/inject: "true"
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "campaign-management-service.serviceAccountName" . }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }} # e.g. 3000 for NestJS
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- omit .Values.startupProbe "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            {{- if .Values.configData }}
            {{- range $key, $value := .Values.configData }}
            - name: {{ $key | upper | replace "-" "_" }} # Convert to standard ENV_VAR format
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            {{- if or .Values.secretKeys .Values.secretData }}
            {{- $secretName := printf "%s-secret" (include "campaign-management-service.fullname" .) }}
            {{- if .Values.secretKeys }}
            {{- range .Values.secretKeys }}
            - name: {{ . | upper | replace "-" "_" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ . }}
            {{- end }}
            {{- end }}
            {{- if .Values.secretData }}
            {{- range $key, $value := .Values.secretData }}
            - name: {{ $key | upper | replace "-" "_" }}
              valueFrom:
                secretKeyRef:
                  name: {{ $secretName }}
                  key: {{ $key }}
            {{- end }}
            {{- end }}
            {{- end }}
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          # Example volumeMounts for mounting ConfigMap/Secret data as files
          # volumeMounts:
          #   - name: config-volume
          #     mountPath: /app/config
          #   - name: secret-volume
          #     mountPath: /app/secrets
          #     readOnly: true
      # Example volumes
      # volumes:
      #   - name: config-volume
      #     configMap:
      #       name: {{ include "campaign-management-service.fullname" . }}-config
      #   - name: secret-volume
      #     secret:
      #       secretName: {{ include "campaign-management-service.fullname" . }}-secret
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}